version: "3.6"
services:
  proxy:
    image: jwilder/nginx-proxy:${ENV_TAG_PROXY}
    env_file:
      - ./env_files/timezone.env
    environment:
      # otherwise logstash will keep sending its own logs to itself over and over
      LOGSPOUT: ignore
    volumes:
      - /etc/ssl/certs:/etc/nginx/certs/
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - hdp-dh-net
  ehrbase:
    image: ehrbase/ehrbase:0.32.0
    depends_on:
      - ehrdb
    env_file:
      - ./env_files/timezone.env
      - ./env_files/ehrbase.env
    environment:
      LOGSPOUT: ignore
      VIRTUAL_HOST: ehrbase.${RIT_ENV}.dh.unimaas.nl
    ports:
      - "8080:8080"
    networks:
      hdp-dh-net:
        aliases:
          - ehrbase.dh.local
    entrypoint:
      - java
      - -jar
      - -Dspring.profiles.active=docker
      - -Dlogging.file.name=/var/log/ehrbase.log
      - ehrbase.jar
    volumes:
      - ./filebeat/logs/ehrbase:/var/log
    restart: on-failure
  ehrdb:
    image: ehrbase/ehrbase-postgres:13.4.v2
    env_file:
      - ./env_files/timezone.env
      - ./env_files/ehrdb.env
    environment:
      LOGSTASH_TAGS: EHR_DB
    ports:
      - "5432:5432"
    networks:
      - hdp-dh-net
  etl-zib:
    build:
      context: ./externals/dh-hdp-etl
      dockerfile: Dockerfile
      args:
        - HDP_TEMPLATES_IMAGE_NAME=${HDP_ZIB_TEMPLATES_IMAGE_NAME}
        - SRC_SUBPROJECT=zib
    image: ${ENV_REGISTRY_HOST}/docker-health/etl-zib:${ENV_TAG}
    volumes:
      - ./data/zib-demo-data:/code/data/zib-demo-data
      - ./filebeat/logs/etl-zib:/code/logs
      - ./outputs/etl-zib:/code/outputs
      # Volume binds to auto-reload the code inside the container
      - ./externals/dh-hdp-etl/etl.py:/code/etl.py
      - ./externals/dh-hdp-etl/src/core:/code/src/core
      - ./externals/dh-hdp-etl/src/subprojects/zib:/code/src/subproject
    env_file:
      - ./env_files/timezone.env
      - ./env_files/ehrbase_server.env
      - ./env_files/transform_server.env
      - ./env_files/etl_zib.env
    environment:
      LOGSTASH_TAGS: ETL_ZIB
      LOGSPOUT: ignore
    networks:
      - hdp-dh-net
  transform-rest-zib:
    build:
      context: ./externals/dh-hdp-transform-rest
      dockerfile: Dockerfile
      args:
        - HDP_TEMPLATES_IMAGE_NAME=${HDP_ZIB_TEMPLATES_IMAGE_NAME}
        - SRC_SUBPROJECT=zib
    image: ${ENV_REGISTRY_HOST}/docker-health/transform-rest-zib:${ENV_TAG}
    volumes:
      - ./filebeat/logs/transform-rest-zib:/var/log
    #      - ./externals/dh-hdp-transform-rest/src-subprojects/zib/:/code/src
    env_file:
      - ./env_files/timezone.env
      - ./env_files/transform_server.env
      - ./env_files/etl_zib.env
    environment:
      LOGSTASH_TAGS: TRANSFORM_REST_ZIB
      LOGSPOUT: ignore
      VIRTUAL_HOST: transform-zib.${RIT_ENV}.dh.unimaas.nl
    ports:
      - "8082:8080"
    networks:
      hdp-dh-net:
        aliases:
          - transform-zib.dh.local
  etl-demo:
    build:
      context: ./externals/dh-hdp-etl
      dockerfile: Dockerfile
      args:
        - HDP_TEMPLATES_IMAGE_NAME=${HDP_DEMO_TEMPLATES_IMAGE_NAME}
        - SRC_SUBPROJECT=demo
    image: ${ENV_REGISTRY_HOST}/docker-health/etl-demo:${ENV_TAG}
    volumes:
      - ./data/synthea-demo-data:/code/data/synthea
      - ./filebeat/logs/etl-demo:/code/logs
      - ./outputs/etl-demo:/code/outputs
      # Volume binds to auto-reload the code inside the container
      - ./externals/dh-hdp-etl/etl.py:/code/etl.py
      - ./externals/dh-hdp-etl/src/core:/code/src/core
      - ./externals/dh-hdp-etl/src/subprojects/demo:/code/src/subproject
    env_file:
      - ./env_files/timezone.env
      - ./env_files/ehrbase_server.env
      - ./env_files/transform_server.env
      - ./env_files/etl_demo.env
    environment:
      LOGSTASH_TAGS: ETL_DEMO
      LOGSPOUT: ignore
    networks:
      - hdp-dh-net
  transform-rest-demo:
    build:
      context: ./externals/dh-hdp-transform-rest
      dockerfile: Dockerfile
      args:
        - HDP_TEMPLATES_IMAGE_NAME=${HDP_DEMO_TEMPLATES_IMAGE_NAME}
        - SRC_SUBPROJECT=demo
    image: ${ENV_REGISTRY_HOST}/docker-health/transform-rest-demo:${ENV_TAG}
    volumes:
      - ./filebeat/logs/transform-rest-demo:/var/log
    #      - ./externals/dh-hdp-transform-rest/src-subprojects/demo/:/code/src
    env_file:
      - ./env_files/timezone.env
      - ./env_files/transform_server.env
      - ./env_files/etl_demo.env
    environment:
      LOGSTASH_TAGS: TRANSFORM_REST_DEMO
      VIRTUAL_HOST: transform-demo.${RIT_ENV}.dh.unimaas.nl
    ports:
      - "8081:8080"
    networks:
      hdp-dh-net:
        aliases:
          - transform-demo.dh.local
  demo-data:
    build:
      context: ./externals/dh-hdp-demodata
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-health/demo-data:${ENV_TAG}
    environment:
      LOGSPOUT: ignore
    volumes:
      - ./data/synthea-demo-data:/opt/output
  data-exploration:
    build:
      context: ./externals/dh-hdp-notebooks
      dockerfile: Dockerfile
    image: ${ENV_REGISTRY_HOST}/docker-health/data-exploration:${ENV_TAG}
    command: "start-notebook.sh --ServerApp.token=${SERVER_APP_TOKEN}"
    env_file:
      - ./env_files/timezone.env
    environment:
      LOGSPOUT: ignore
      VIRTUAL_HOST: jupyter.${RIT_ENV}.dh.unimaas.nl
    volumes:
      - ./data/synthea-demo-data/csv:/home/jovyan/data
      # Volume binds to auto-reload the code inside the container
      - ./externals/dh-hdp-notebooks/:/home/jovyan/notebooks
    ports:
      - "8888:8888"
    networks:
      hdp-dh-net:
        aliases:
          - jupyter.dh.local
  filebeat:
    build:
      context: ./filebeat
      dockerfile: Dockerfile
    env_file:
      - ./env_files/timezone.env
    environment:
      LOGSPOUT: ignore
    volumes:
      - ./filebeat/filebeat.yml:/etc/filebeat/filebeat.yml:ro
      - ./filebeat/logs:/usr/share/logs/
      - ./filebeat/certs:/etc/certs:ro
    networks:
      hdp-dh-net:
        aliases:
          - filebeat.dh.local

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "172.30.1.0/24"
  hdp-dh-net:
    ipam:
      driver: default
      config:
        - subnet: "172.31.1.0/24"
