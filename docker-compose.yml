include:
  - docker-compose.test-node.yml
  - docker-compose.mumc-node.yml
  - docker-compose.zio-node.yml
services:
  proxy:
    image: jwilder/nginx-proxy:${ENV_TAG_PROXY}
    env_file:
      - ./env_files/timezone.env
    volumes:
      - /etc/ssl/certs:/etc/nginx/certs/
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - hdp-dh-test-net
      - hdp-dh-mumc-net
      - hdp-dh-zio-net
  transform-rest:
    build:
      context: ./externals/dh-hdp-transform-rest
      dockerfile: Dockerfile
      args:
        - MAVEN_VERSION=${MAVEN_VERSION}
      additional_contexts:
        hdp_templates: ./externals/dh-hdp-zib-templates
    image: ${ENV_REGISTRY_HOST}/docker-health/transform-rest:${ENV_TAG}
    depends_on:
      - proxy
      - filebeat
    volumes:
      - ./filebeat/logs/transform-rest:/var/log
    #      - ./externals/dh-hdp-transform-rest/src/:/code/src
    env_file:
      - ./env_files/timezone.env
      - ./env_files/transform_server.env
      - ./env_files/zib-templates.env
    environment:
      LOGSTASH_TAGS: TRANSFORM_REST
      VIRTUAL_HOST: transform.${RIT_ENV}.dh.unimaas.nl
    ports:
      - "8079:8080"
    networks:
      hdp-dh-test-net:
        aliases:
          - transform.dh.local
      hdp-dh-mumc-net:
        aliases:
          - transform.dh.local
      hdp-dh-zio-net:
        aliases:
          - transform.dh.local
  federation-api:
    build:
      context: ./externals/dh-hdp-federation-api
      dockerfile: Dockerfile
      additional_contexts:
        src_etl: ./externals/dh-hdp-etl
    image: ${ENV_REGISTRY_HOST}/docker-health/federation-api:${ENV_TAG}
    depends_on:
      proxy:
        condition: service_started
      filebeat:
        condition: service_started
      mumc-etl-zib:
        condition: service_healthy
      zio-etl-zib:
        condition: service_healthy
    volumes:
      - ./filebeat/logs/federation-api:/code/logs/federation-api
    env_file:
      - ./env_files/timezone.env
      - ./env_files/transform_server.env
      - ./env_files/zib-templates.env
      - ./env_files/federation.env
    environment:
      LOGSTASH_TAGS: FEDERATION_API
      VIRTUAL_HOST: federation.${RIT_ENV}.dh.unimaas.nl
    command: ["uvicorn", "federation_api:app", "--host", "0.0.0.0", "--port", "8000"]
    healthcheck:
      test: curl --fail http://localhost:8000/health || exit 1
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "8000:8000"
    networks:
      hdp-dh-mumc-net:
        aliases:
          - federation.dh.local
      hdp-dh-zio-net:
        aliases:
          - federation.dh.local
  filebeat:
    build:
      context: ./filebeat
      dockerfile: Dockerfile
    env_file:
      - ./env_files/timezone.env
    volumes:
      - ./filebeat/filebeat.yml:/etc/filebeat/filebeat.yml:ro
      - ./filebeat/logs:/usr/share/logs/
      - ./filebeat/certs:/etc/certs:ro
    networks:
      hdp-dh-test-net:
        aliases:
          - filebeat.dh.local
      hdp-dh-mumc-net:
        aliases:
          - filebeat.dh.local
      hdp-dh-zio-net:
        aliases:
          - filebeat.dh.local
  jupyter-zib:
    build:
      context: ./externals/dh-hdp-notebooks
      dockerfile: Dockerfile
      args:
        - DATA=zib
      additional_contexts:
        hdp_templates: ./externals/dh-hdp-zib-templates
    image: ${ENV_REGISTRY_HOST}/docker-health/jupyter-zib:${ENV_TAG}
    command: "start-notebook.sh --ServerApp.token=${SERVER_APP_TOKEN}"
    depends_on:
      transform-rest:
        condition: service_started
      mumc-ehrbase:
        condition: service_healthy
      zio-ehrbase:
        condition: service_healthy
      federation-api:
        condition: service_started
    env_file:
      - ./env_files/timezone.env
      - ./env_files/transform_server.env
      - ./env_files/zib-templates.env
    environment:
      VIRTUAL_HOST: jupyter.${RIT_ENV}.dh.unimaas.nl
    volumes:
      - ./data/mumc-demo-data:/home/jovyan/data/mumc-demo-data
      - ./data/zio-demo-data:/home/jovyan/data/zio-demo-data
      # Volume binds to auto-reload the code inside the container
      - ./externals/dh-hdp-etl/etl.py:/home/jovyan/etl.py
      - ./externals/dh-hdp-etl/requirements.txt:/home/jovyan/requirements.txt
      - ./externals/dh-hdp-etl/src:/home/jovyan/src
      # Volume binds to auto-reload the code inside the container
      - ./externals/dh-hdp-notebooks/:/home/jovyan/notebooks
    ports:
      - "8888:8888"
    networks:
      hdp-dh-mumc-net:
        aliases:
          - jupyter-zib.dh.local
      hdp-dh-zio-net:
        aliases:
          - jupyter-zib.dh.local
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server  /redis.conf
    volumes:
      - ./openEHR-tool/redis.conf:/redis.conf
    networks:
      hdp-dh-mumc-net:
        aliases:
          - redis.dh.local
      hdp-dh-zio-net:
        aliases:
          - redis.dh.local
networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "172.30.1.0/24"
  hdp-dh-test-net:
    ipam:
      driver: default
      config:
        - subnet: "172.33.1.0/24"
  hdp-dh-mumc-net:
    ipam:
      driver: default
      config:
        - subnet: "172.31.1.0/24"
  hdp-dh-zio-net:
    ipam:
      driver: default
      config:
        - subnet: "172.32.1.0/24"
